{
	"name": "df_agg_derive",
	"properties": {
		"description": "dataflow is created  to learn aggregator and derive activity",
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "movies",
						"type": "DatasetReference"
					},
					"name": "moviesv1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "moviesoutput",
						"type": "DatasetReference"
					},
					"name": "Moviesclean",
					"rejectedDataLinkedService": {
						"referenceName": "AzureBlobStorage1",
						"type": "LinkedServiceReference"
					}
				},
				{
					"dataset": {
						"referenceName": "moviesoutput",
						"type": "DatasetReference"
					},
					"name": "MoviesCountByYear"
				}
			],
			"transformations": [
				{
					"name": "ExtractYearTitle"
				},
				{
					"name": "RatingBYYear"
				}
			],
			"scriptLines": [
				"source(output(",
				"          movieId as string,",
				"          title as string,",
				"          genres as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> moviesv1",
				"moviesv1 derive(year = toInteger(trim(right(title,6),'()')),",
				"          title = toString(left(title,length(title)-6))) ~> ExtractYearTitle",
				"ExtractYearTitle aggregate(groupBy(year),",
				"     Moviescnt = count(year)) ~> RatingBYYear",
				"ExtractYearTitle sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:['moviesclean.csv'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> Moviesclean",
				"RatingBYYear sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:['MoviesCountByYear'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> MoviesCountByYear"
			]
		}
	}
}